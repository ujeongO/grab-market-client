React의 컴포넌트에서 관리하는 데이터 2가지
1. Props
2. State
이 둘은 컴포넌트에서 데이터를 관리할 때 사용하는 개념 > 중요중요!

컴포넌트는 기본적으로 다른 컴포넌트를 가질 수 있다.
이때, 부모 컴포넌트 > 자식 컴포넌트 값을 넘겨줘야 할 때가 있다.
→ Props를 이용해 값을 전달해 줄 수 있다.

Props는 기본적으로 부모에게 값을 전달 받는다. 
전달받은 Props는 컴포넌트 내에서 따로 업데이트 하지 않고 정적으로 사용된다.

//------------------------------------------------------------------------------------------

컴포넌트는 return을 통해 UI요소를 보여준다.
그런데 서비스를 사용하다 보면 컴포넌트 UI를 업데이트 해줘야 하는 상황이 발생.
ex) 1. 시간을 보여주는 화면을 구현할 때, 시간을 표시하는 컴포넌트는 시간이 지나면서 계속 업데이트 되는 것.
    2. 네트워크 통신을 통해 데이터를 받아오면 화면 컴포넌트에 새로운 값을 보여주는 것.
    3. 검색창에서 검색어를 입력할 때, 아래에 추천 검색어를 바꿔서 보여주는 것.

>> 컴포넌트를 업데이트(렌더링)해줄 수 있도록 해주는 장치
→ State

State는 Props와 반대로 변화하는(동적인) 값. 
기본적으로 state가 변경되면 컴포넌트는 새롭게 업데이트된다.

==> Props는 부모에게 받은 값, State는 컴포넌트 내에서 사용하는 값.

//------------------------------------------------------------------------------------------

state를 사용하기 위해서 React 라이브러리 useState를 사용.
1. useState 함수를 실행할 때 첫 번째 인자에 기본 값(0)을 넣어준다.
2. useState 함수를 실행하면 결과로 [state 값, state를 변경시키는 함수], 2가지를 반환한다.
3. 좌측에 state 값을 time 변수를 넣고, state 변경 함수를 setTime 변수에 넣는다.
4. setTime 함수로 state를 업데이트 시키면 컴포넌트가 Re-Rending(리 레더링) 된다.

//------------------------------------------------------------------------------------------

React에서는 렌더링 하는 것을 제어할 수 있는 장치로 useEffect 라는 메소드를 제공한다.
useEffect(function, [모니터링 대상]) 의 형태로 사용한다.

useEffect의 두 번째 인자에 들어가는 변수가 변경될 때마다 useEffect 안의 함수가 재실행된다.
만약 값이 없다면, 딱 한 번만 실행되고 더 이상 실행되지 않는다.