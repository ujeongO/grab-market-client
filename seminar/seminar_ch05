ES6: 현재 가장 대중적으로 사용되고 있는 JavaScrip 문법

//------------------------------------------------------------------------------------------------------------------

Template Literal: string 자료형 입력할 때 +연산자 대신 ``을 사용한다.
                안에 변수를 넣고 싶다면 ${변수} 로 사용한다.

//------------------------------------------------------------------------------------------------------------------

Destructuring(구조 분해 할당)
→ 객체와 배열에 들어있는 값을 가져올 때 사용
ex) 
const grab = {
    name: '그랩',
    age: 27
};
const people = ['민수', '철수'];

// Destructuring으로 값을 가져옴
var {name, age} = grab;             // var name = grab.name, var age = grab.age
const [minsoo, chulsoo] = people    // const minsoo = '민수', const chulsoo = '철수'

//------------------------------------------------------------------------------------------------------------------

map, forEach 메소드: 배열에서 기본적으로 제공해주는 메소드. 배열을 가공할 때 많이 사용한다.
                    for문처럼 배열을 조회한다는 기능은 비슷함
ex)
var products = [{
    name: '농구공',
    price: 5000
}, {
    name: '축구공',
    price: 5000
}];

map, forEach 모두 배열을 조회한다는 기능은 동일
forEach는 return이 없다.
map은 새로운 배열을 return 한다.

products.forEach(function(product, index) {
    console.log(`${index+1} 번째 호출`);
});

products.map(function(product, index) {
    console.log(`${index+1} 번째 호출`);
});

var productName = products.map(function(product, index) {
    return product.name;
})

var productPrice = products.map(function(product, index) {
    return product.price;
})

//------------------------------------------------------------------------------------------------------------------

Lambda Function(람다 함수) = arrow function

var productName = products.map((product, index) => {
    return product.name;
});

//------------------------------------------------------------------------------------------------------------------

Conditional Ternary Operator(3항 연산자)

var num1 = 20;
var num2 = 51;
const max = num1 > num2 ? num1 : num2;